
buildscript {
  repositories {
    mavenCentral()
    //Needed only for SNAPSHOT versions
    //maven { url "http://oss.sonatype.org/content/repositories/snapshots/" }
  }
  dependencies {
    classpath "io.codearte.gradle.nexus:gradle-nexus-staging-plugin:0.12.0"
  }
}

plugins {
  id 'java-gradle-plugin'
  id 'groovy'
  id 'maven-publish'
  id 'java-library'
//  id 'io.codearte.nexus-staging' version '0.21.0'
}

group 'com.dadapush.client'
archivesBaseName = 'dadapush-gradle-plugin'
version '1.0.0'

apply plugin: 'java'
apply plugin: "maven"
apply plugin: 'signing'
apply plugin: 'io.codearte.nexus-staging'

sourceCompatibility = 1.8

repositories {
  mavenCentral()
}

dependencies {
  implementation gradleApi()
  implementation localGroovy()
  implementation group: "com.dadapush.client", name: "dadapush-client", version: "1.0.0"
  testCompile group: 'junit', name: 'junit', version: '4.12'
}

gradlePlugin {
  plugins {
    simplePlugin {
      id = 'com.dadapush.gradle'
      implementationClass = 'com.dadapush.client.gradle.DaDaPushPlugin'
    }
  }
}

signing {
  sign configurations.archives
}

// Add Javadoc JAR and sources JAR to artifact
task javadocJar(type: Jar) {
  classifier = 'javadoc'
  from javadoc
}
task sourcesJar(type: Jar) {
  classifier = 'sources'
  from sourceSets.main.allSource
}
artifacts {
  archives javadocJar, sourcesJar
}

// Build, sign, and upload
uploadArchives {
  repositories {
    mavenDeployer {

      // Sign POM
      beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

      // Destination
      repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
        authentication(userName: ossrhUsername, password: ossrhPassword)
      }
      snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
        authentication(userName: ossrhUsername, password: ossrhPassword)
      }

      // Add required metadata to POM
      pom.project {
        name 'Gradle DaDaPush Notification Plugin'
        packaging 'jar'
        description 'a gradle plugin for sending notification via DaDaPush'
        url 'https://github.com/dadapush/gradle-dadapush-notification-plugin'

        licenses {
          license {
            name 'Apache License 2.0'
            url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
            distribution 'repo'
          }
        }
        scm {
          connection 'scm:git:git@github.com:dadapush/gradle-dadapush-notification-plugin.git'
          developerConnection 'scm:git:git@github.com:dadapush/gradle-dadapush-notification-plugin.git'
          url 'https://github.com/dadapush/gradle-dadapush-notification-plugin'
        }

        developers {
          developer {
            id = 'dadapush'
            name = 'DaDaPush'
            email = 'contacts@dadapush.com'
            organization = "www.dadapush.com"
            organizationUrl = "https://www.dadapush.com"
          }
        }


      }
    }
  }
}

